---
- name: set selinux to permissive
  selinux:
    policy: targeted
    state: permissive

# Workaround for bug in lab -- dnf makecache created metadata lock
- name: "workaround: stop dnf-makecache.service"
  service:
    name: dnf-makecache.service
    state: stopped

- name: install runner dependencies
  dnf:
    name: "{{ item }}"
    state: present
  with_items:
    - https://releases.hashicorp.com/vagrant/2.0.0/vagrant_2.0.0_x86_64.rpm
    - vagrant-libvirt
    - libguestfs-tools-c  # required for vagrant package command
    - ansible  # TODO requires >= 2.3 
    - nfs-utils
    - git
    - libvirt
    - rsync
    - createrepo
    - gzip
    - gcc
    - python3-devel
    - python3-pip
    - redhat-rpm-config
    - redis
    - python3-redis
    - python3-parse
    - python3-dateutil
    - python3-psutil
    - python3-PyYAML
    - python3-raven
    - python3-tqdm
    - python3-pytz
    - python3-jinja2

    # needed for AD tests
    - python3-winrm
    - python2-winrm
  notify:
    - restart_nfs

# all this is because vagrant 2.x is needed and I was testing using f26
# f27 provides vagrant 2.x by default
- name: install libvirt for vagrant 2.x
  raw: dnf -y install libvirt-devel ruby-devel

- name: install libvirt plugin for vagrant
  raw: vagrant plugin install vagrant-libvirt
  ignore_errors: yes
  # if the plugin is already installed it may raise error

- name: install vagrant plugin (winrm) for AD tests
  raw: vagrant plugin install winrm
  ignore_errors: yes
  # if the plugin is already installed it may raise error

- name: install vagrant plugins (winrm-fs) for AD tests
  raw: vagrant plugin install winrm-fs
  ignore_errors: yes
  # if the plugin is already installed it may raise error

- name: install vagrant plugins (winrm-elevated) for AD tests
  raw: vagrant plugin install winrm-elevated
  ignore_errors: yes
  # if the plugin is already installed it may raise error

- name: start&enable nfs
  service:
    name: nfs
    enabled: true
    state: started

- name: start&enable libvirt services
  service:
    name: "{{ item }}"
    enabled: true
    state: started
  with_items:
    - virtlogd
    - libvirtd

- name: start&enable redis service
  service:
    name: redis
    enabled: true
    state: started

- name: configure size of systemd journal
  lineinfile:
    path: /etc/systemd/journald.conf
    regexp: '^#?SystemMaxFileSize'
    line: 'SystemMaxFileSize={{ limit_size_systemd_journal }}'
    state: present
